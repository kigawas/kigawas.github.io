<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FastAPI on map(learn, world)</title><link>/tags/fastapi/</link><description>Recent content in FastAPI on map(learn, world)</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 03 Dec 2022 11:58:57 +0900</lastBuildDate><atom:link href="/tags/fastapi/index.xml" rel="self" type="application/rss+xml"/><item><title>Reconsider the performance benchmarks in Python web development</title><link>/posts/performance-benchmarks-in-python-web-development/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>/posts/performance-benchmarks-in-python-web-development/</guid><description>&lt;p>A few words on common misunderstandings and performance tips of web development benchmarks.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>As of 2020, amongst the various web benchmarks, the most prestigious and reliable one would be &lt;a href="https://www.techempower.com/benchmarks/#section=data-r19&amp;amp;hw=cl&amp;amp;test=fortune&amp;amp;l=zijzen-1r">TechEmpower benchmarks&lt;/a>. Despite the fact that &lt;a href="https://docs.python.org/3/library/asyncio.html">asyncio&lt;/a>-based web frameworks prevail on performance in theory and in practice, &lt;strong>how&lt;/strong> performant those frameworks are in pragmatic environments remains to be inspected.&lt;/p>
&lt;p>According to TechEmpower benchmarks, it can be noticed that some Python frameworks even &lt;a href="https://www.techempower.com/benchmarks/#section=data-r19&amp;amp;hw=ph&amp;amp;test=fortune&amp;amp;l=zijmrj-1r">outperform Gin&lt;/a>, the most famous and widely used Go web framework. In this article, some practical experiments will be carried out over the issue.&lt;/p></description></item><item><title>The integration of FastAPI and Django ORM</title><link>/posts/integrate-fastapi-and-django-orm/</link><pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate><guid>/posts/integrate-fastapi-and-django-orm/</guid><description>&lt;p>This is the English translation of the Japanese original post at &lt;a href="https://qiita.com/kigawas/items/80e48ccce98a35f65fff">qiita&lt;/a>, with some modifications.&lt;/p>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Recently FastAPI is &lt;a href="https://star-history.t9t.io/#tiangolo/fastapi">growing incredibly&lt;/a>. It&amp;rsquo;s blazingly fast and painless to develop, with &lt;a href="https://www.techempower.com/benchmarks/#section=data-r20&amp;amp;hw=ph&amp;amp;test=fortune&amp;amp;l=zijzen-sf">5~10x performance enhancement&lt;/a> over Django or Flask.&lt;/p>
&lt;p>I really want to switch to FastAPI from Django, however, it&amp;rsquo;s not that easy to give up Django and its self-sufficient user system as well as the admin page totally. I know it sounds greedy, but in fact there &lt;strong>is&lt;/strong> such convenience. This time I&amp;rsquo;ll show you how to integrate FastAPI and Django ORM simply and quickly.&lt;/p></description></item></channel></rss>