<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OOP on map(learn, world)</title><link>/tags/oop/</link><description>Recent content in OOP on map(learn, world)</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 18 Jan 2023 16:44:57 +0900</lastBuildDate><atom:link href="/tags/oop/index.xml" rel="self" type="application/rss+xml"/><item><title>Redefining shared behaviors algebraically</title><link>/posts/interface-vs-adt/</link><pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate><guid>/posts/interface-vs-adt/</guid><description>Overview Object-oriented programming is a ubiquitous paradigm all over the software development field as it could be found in the most of prevalent languages: C++, C#, Java, JavaScript, Python, etc. Polymorphism, an important characteristic in OOP, is often implemented by sub-typing in a typical OOP language.
interface Animal { public void talk(); } class Cat implements Animal { public void talk() { System.out.println(&amp;#34;meow&amp;#34;); } } class Dog implements Animal { public void talk() { System.</description></item></channel></rss>